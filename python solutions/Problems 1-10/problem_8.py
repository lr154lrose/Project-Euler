def largest_product_of_n_numbers(
    series, number
):  # function taking as parameters a sequence and a number n, it returns the largest product of n adjacent elements from the series

    largest_product_factors = series_numbers(series, number)
    largest_product = product_of_factors(largest_product_factors)
    for i in range(len(series) - number):
        factors = series_numbers(series[i:], number)
        if product_of_factors(factors) > largest_product:
            largest_product = product_of_factors(factors)

    return largest_product


def product_of_factors(
    list_of_factors,
):  # function finding the product of a list of numbers
    product = 1
    for element in list_of_factors:
        product *= element

    return product


def series_numbers(
    series, number
):  # function returning a list of the first n numbers from a sequence

    return [int(series[element]) for element in range(number)]


print(
    largest_product_of_n_numbers(
        "731671765313306249192251196744265747423553491949349698352031277450632623957831801698480186947885184385861560789112949495459501737953319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450",
        13,
    )
)
